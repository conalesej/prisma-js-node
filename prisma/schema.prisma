generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  age              Int
  name             String
  email            String
  role             Role            @default(BASIC)
  blob             Bytes?
  writtenPosts     Post[]          @relation("WrittenPosts")
  favoritePosts    Post[]          @relation("FavoritePosts")
  userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId String?         @unique // Making this one to one relationship  @unique

  @@unique([age, name])
  @@index([email, name])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean

  user User?
}

model Post {
  id            String   @id @default(uuid())
  title         String
  author        User     @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favoritedBy   User?    @relation("FavoritePosts", fields: [favoritedById], references: [id])
  favoritedById String?
  averageRating Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  categories Category[]

  // @@id([title, authorId]) // We're saying that the title and authorid combination should be the id
}

model Category {
  id    String @id @default(uuid())
  name  String
  posts Post[]
}

enum Role {
  BASIC
  ADMIN
}
